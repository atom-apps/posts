// Code generated by the atomctl; DO NOT EDIT.

package routes

import (
	"strings"

	"github.com/atom-apps/posts/common"
	"github.com/atom-apps/posts/modules/posts/controller"
	"github.com/atom-apps/posts/modules/posts/dto"

	"github.com/gofiber/fiber/v2"
	. "github.com/rogeecn/fen"
)

func routeArticleController(engine fiber.Router, controller *controller.ArticleController) {
	groupPrefix := "/" + strings.TrimLeft(engine.(*fiber.Group).Prefix, "/")
	engine.Get(strings.TrimPrefix("/v1/posts/articles/:id<int>", groupPrefix), DataFunc1(controller.Show, Integer[uint64]("id", PathParamError)))
	engine.Get(strings.TrimPrefix("/v1/posts/articles", groupPrefix), DataFunc3(controller.List, Query[dto.ArticleListQueryFilter](QueryParamError), Query[common.PageQueryFilter](QueryParamError), Query[common.SortQueryFilter](QueryParamError)))
	engine.Post(strings.TrimPrefix("/v1/posts/articles", groupPrefix), Func1(controller.Create, Body[dto.ArticleForm](BodyParamError)))
	engine.Put(strings.TrimPrefix("/v1/posts/articles/:id<int>", groupPrefix), Func2(controller.Update, Integer[uint64]("id", PathParamError), Body[dto.ArticleForm](BodyParamError)))
	engine.Delete(strings.TrimPrefix("/v1/posts/articles/:id<int>", groupPrefix), Func1(controller.Delete, Integer[uint64]("id", PathParamError)))
}
