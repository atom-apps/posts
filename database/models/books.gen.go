// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"

	"gorm.io/gorm"
	"gorm.io/gorm/schema"
)

const TableNameBook = "books"

// Book mapped from table <books>
type Book struct {
	ID          uint64         `gorm:"column:id;type:bigint unsigned;primaryKey;autoIncrement:true;comment:ID" json:"id"`      // ID
	CreatedAt   time.Time      `gorm:"column:created_at;type:datetime(3);comment:创建时间" json:"created_at"`                      // 创建时间
	UpdatedAt   time.Time      `gorm:"column:updated_at;type:datetime(3);comment:更新时间" json:"updated_at"`                      // 更新时间
	DeletedAt   gorm.DeletedAt `gorm:"column:deleted_at;type:datetime(3);comment:删除时间" json:"deleted_at" swaggertype:"string"` // 删除时间
	TenantID    uint64         `gorm:"column:tenant_id;type:bigint unsigned;comment:租户ID" json:"tenant_id"`                    // 租户ID
	UserID      uint64         `gorm:"column:user_id;type:bigint unsigned;comment:用户ID" json:"user_id"`                        // 用户ID
	Title       string         `gorm:"column:title;type:varchar(128);not null;comment:书名" json:"title"`                        // 书名
	Description string         `gorm:"column:description;type:varchar(256);not null;comment:简介" json:"description"`            // 简介
	Content     string         `gorm:"column:content;type:varchar(191);comment:详细介绍" json:"content"`                           // 详细介绍
	Author      string         `gorm:"column:author;type:varchar(128);comment:原作者" json:"author"`                              // 原作者
	Source      string         `gorm:"column:source;type:varchar(1024);comment:原书地址" json:"source"`                            // 原书地址
	Isbn        string         `gorm:"column:isbn;type:varchar(64);comment:ISBN" json:"isbn"`                                  // ISBN
	Price       uint64         `gorm:"column:price;type:bigint unsigned;comment:价格" json:"price"`                              // 价格
}

func (*Book) TableName(namer schema.Namer) string {
	if namer == nil {
		return TableNameBook
	}
	return namer.TableName(TableNameBook)
}
