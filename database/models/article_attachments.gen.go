// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"

	"gorm.io/gorm"
	"gorm.io/gorm/schema"
)

const TableNameArticleAttachment = "article_attachments"

// ArticleAttachment mapped from table <article_attachments>
type ArticleAttachment struct {
	ID           uint64         `gorm:"column:id;type:bigint unsigned;primaryKey;autoIncrement:true;comment:ID" json:"id"`      // ID
	CreatedAt    time.Time      `gorm:"column:created_at;type:datetime(3);comment:创建时间" json:"created_at"`                      // 创建时间
	UpdatedAt    time.Time      `gorm:"column:updated_at;type:datetime(3);comment:更新时间" json:"updated_at"`                      // 更新时间
	DeletedAt    gorm.DeletedAt `gorm:"column:deleted_at;type:datetime(3);comment:删除时间" json:"deleted_at" swaggertype:"string"` // 删除时间
	TenantID     uint64         `gorm:"column:tenant_id;type:bigint unsigned;comment:租户ID" json:"tenant_id"`                    // 租户ID
	UserID       uint64         `gorm:"column:user_id;type:bigint unsigned;comment:用户ID" json:"user_id"`                        // 用户ID
	ArticleID    uint64         `gorm:"column:article_id;type:bigint unsigned;comment:文章ID" json:"article_id"`                  // 文章ID
	FilesystemID uint64         `gorm:"column:filesystem_id;type:bigint unsigned;comment:文件系统ID" json:"filesystem_id"`          // 文件系统ID
	Description  string         `gorm:"column:description;type:varchar(256);not null;comment:文件描述" json:"description"`          // 文件描述
	Password     string         `gorm:"column:password;type:varchar(128);not null;comment:文件密码" json:"password"`                // 文件密码
}

func (*ArticleAttachment) TableName(namer schema.Namer) string {
	if namer == nil {
		return TableNameArticleAttachment
	}
	return namer.TableName(TableNameArticleAttachment)
}
