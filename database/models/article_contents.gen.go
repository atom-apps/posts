// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"

	"gorm.io/gorm"
	"gorm.io/gorm/schema"
)

const TableNameArticleContent = "article_contents"

// ArticleContent mapped from table <article_contents>
type ArticleContent struct {
	ID           uint64         `gorm:"column:id;type:bigint unsigned;primaryKey;autoIncrement:true;comment:ID" json:"id"`      // ID
	CreatedAt    time.Time      `gorm:"column:created_at;type:datetime(3);comment:创建时间" json:"created_at"`                      // 创建时间
	UpdatedAt    time.Time      `gorm:"column:updated_at;type:datetime(3);comment:更新时间" json:"updated_at"`                      // 更新时间
	DeletedAt    gorm.DeletedAt `gorm:"column:deleted_at;type:datetime(3);comment:删除时间" json:"deleted_at" swaggertype:"string"` // 删除时间
	TenantID     uint64         `gorm:"column:tenant_id;type:bigint unsigned;comment:租户ID" json:"tenant_id"`                    // 租户ID
	UserID       uint64         `gorm:"column:user_id;type:bigint unsigned;comment:用户ID" json:"user_id"`                        // 用户ID
	ArticleID    uint64         `gorm:"column:article_id;type:bigint unsigned;comment:文章ID" json:"article_id"`                  // 文章ID
	FreeContent  string         `gorm:"column:free_content;type:varchar(191);comment:内容" json:"free_content"`                   // 内容
	PriceContent string         `gorm:"column:price_content;type:varchar(191);comment:付费内容" json:"price_content"`               // 付费内容
}

func (*ArticleContent) TableName(namer schema.Namer) string {
	if namer == nil {
		return TableNameArticleContent
	}
	return namer.TableName(TableNameArticleContent)
}
